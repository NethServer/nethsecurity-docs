# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Nethesis Srl and the NethSecurity project contributors
# This file is distributed under the same license as the NethSecurity
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: NethSecurity 8-24.10.0-ns.1.5.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-06-03 12:43+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: it\n"
"Language-Team: it <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../reverse_proxy.rst:3 2400b42d85dc40e8be50a6c8c8f382a7
msgid "Certificates and reverse proxy"
msgstr ""

#: ../../reverse_proxy.rst:8 069342841c0b4016a02a56ebc5e71ea5
msgid "Reverse proxy"
msgstr ""

#: ../../reverse_proxy.rst:10 0b8e26e1a42d4845b43b40ec3282c3ee
msgid ""
"NethSecurity provides a reverse proxy using `nginx <https://nginx.org>`_."
" A reverse proxy, sometimes called also proxy pass, is a server that sits"
" in front of one or more web servers and forwards requests to them. It "
"can be used to improve performance, security, and reliability."
msgstr ""

#: ../../reverse_proxy.rst:14 8d1bdeb33d5149c99f11fee1d1dd70e3
msgid ""
"In simpler terms, a reverse proxy is like a traffic cop for web servers. "
"It directs incoming requests to the appropriate server and sends back the"
" responses."
msgstr ""

#: ../../reverse_proxy.rst:16 59eb7f119e184ca588e823183c24251c
msgid ""
"Reverse proxies are often used to improve performance by caching static "
"content and distributing traffic across multiple servers. They can also "
"be used to increase security by implementing the TLS endpoint."
msgstr ""

#: ../../reverse_proxy.rst:20 70ce77ead40b4999bf1f800c6bece475
msgid ""
"The reverse proxy is only available on port 443 (HTTPS) and *not* on port"
" 80 (HTTP)."
msgstr ""

#: ../../reverse_proxy.rst:22 917129a8645f49539f86e6fc348f567e
msgid ""
"This page allows users to configure proxy pass settings, specifying "
"whether the rule applies to a domain or a path. For domain "
"configurations, users can select a certificate. The destination URL "
"determines where incoming requests are forwarded, and the allowed network"
" field provides the option to restrict access to specific CIDR-formatted "
"networks. A description can be added for clarity."
msgstr ""

#: ../../reverse_proxy.rst:27 c8f9c3e4b3c14097849e97865fcaf52a
msgid ""
"To configure a new proxy pass, click on the :guilabel:`Add reverse proxy`"
" and customize the following options:"
msgstr ""

#: ../../reverse_proxy.rst:29 f195bea0a0264bf4834542da09f875e9
msgid ""
"``Type``: choose between Domain or Path. If type is ``Path``, enter the "
"resource path starting with a '/' for matching rules (e.g., ``/resource-"
"path``). If type is ``Domain``, enter the fully qualified domain name for"
" website matching rules. Select also an associated :ref:`certificate "
"<certificates-section>`."
msgstr ""

#: ../../reverse_proxy.rst:32 83cb47e0dc234b79abc060ba73817b77
msgid ""
"``Destination URL``: specify the forwarding location for incoming "
"requests (e.g., ``http://destination-server:port/path``)."
msgstr ""

#: ../../reverse_proxy.rst:33 35af7e8cb00947749a5893b0e049b47d
msgid ""
"``Allowed networks``: define allowed IPv4/IPv6 networks in CIDR format. "
"By default, accessible from anywhere."
msgstr ""

#: ../../reverse_proxy.rst:34 98f439df00014d53a0dd03987a9cb2f6
msgid "``Description``: optionally, add a description for clarity."
msgstr ""

#: ../../reverse_proxy.rst:36 e02cee6299244bf4878f6c524427bd57
msgid "Additional information:"
msgstr ""

#: ../../reverse_proxy.rst:38 ddc9a547275d4631b082aad83472b3e8
msgid ""
"Headers sent to destination server: X-Forwarded-Proto, X-Forwarded-For, X"
"-Real-IP are always sent."
msgstr ""

#: ../../reverse_proxy.rst:39 6604ab8de3a54891a509978a066b8027
msgid ""
"Certificate validation: if the destination uses HTTPS, the certificate is"
" not validated to avoid errors on misconfigured servers."
msgstr ""

#: ../../reverse_proxy.rst:40 2fcdb8474b8144dcb06761b3499fe0d8
msgid "WebSocket support: all reverse proxies automatically support WebSockets."
msgstr ""

#: ../../reverse_proxy.rst:45 dad8f23af3f84c1086b9613147a2ef26
msgid "Certificates"
msgstr ""

#: ../../reverse_proxy.rst:47 3be1cdded9c94543ad47d6c18a2f32c1
msgid ""
"The ``Certificates`` page centralizes certificate management "
"functionalities, facilitating the handling of certificates on the "
"firewall. At the firewall's initial startup, a self-signed certificate is"
" automatically generated. This certificate serves as a default secure "
"option."
msgstr ""

#: ../../reverse_proxy.rst:50 381d3dedf0e649b9a65daa8d4b985662
msgid ""
"The certificate management page allows users to upload custom "
"certificates, request certificates from Let's Encrypt, and manage "
"existing certificates."
msgstr ""

#: ../../reverse_proxy.rst:52 c2324d19e3934fdfa0df922b771f6178
msgid ""
"The page lists all certificates, highlighting the default certificate. To"
" set a certificate as the default certificate, click on the "
":guilabel:`Set as default` button. The default certificate is the one "
"automatically served when accessing the :ref:`web user interface "
"<web_user_interface-section>`, both on port 443, :ref:`9090 or custom "
"port <change_ui_port-section>`."
msgstr ""

#: ../../reverse_proxy.rst:59 7764ec9699314a58ba884d389253977b
msgid "Let's Encrypt"
msgstr ""

#: ../../reverse_proxy.rst:61 1ddda86838e947d9a23a966686c77d12
msgid ""
"Let's Encrypt is a free, automated, and open Certificate Authority (CA) "
"that provides SSL/TLS certificates for securing websites. These "
"certificates ensure encrypted communication between web servers and "
"users' browsers, enhancing security and privacy on the internet. Unlike "
"traditional CAs, Let's Encrypt offers SSL certificates through an "
"automated system, making it accessible to website owners and "
"administrators without significant costs or technical expertise."
msgstr ""

#: ../../reverse_proxy.rst:66 3a8e636065d540c29bc37bfb3df9a731
msgid ""
"The certificate page allows users to request certificates from Let's "
"Encrypt. The process is straightforward and requires minimal "
"configuration. Users can specify a meaningful name for the certificate "
"and one or more domains. The certificate is automatically renewed every "
"60 days."
msgstr ""

#: ../../reverse_proxy.rst:69 84a979e72015419c8a68e17b5b0d45c6
msgid ""
"The Let's Encrypt certificate request process involves the following "
"steps:"
msgstr ""

#: ../../reverse_proxy.rst:71 3d5021fded2b471096a9be2a51e82120
msgid "click on the :guilabel:`Add Let's Encrypt certificate` button;"
msgstr ""

#: ../../reverse_proxy.rst:72 3ce5b9dfc597406189916a6c277d13ac
msgid "specify a meaningful name for the certificate;"
msgstr ""

#: ../../reverse_proxy.rst:73 14e5243970744739b6ec590cb9571f7f
msgid "specify one or more domains for the certificate;"
msgstr ""

#: ../../reverse_proxy.rst:74 2680828880194c77ba52f9957d1ed4cf
msgid "click on the :guilabel:`Save` button."
msgstr ""

#: ../../reverse_proxy.rst:76 c57abffb8e6b425f88acd05fb373a2ff
msgid "The validation process can be performed in two ways:"
msgstr ""

#: ../../reverse_proxy.rst:78 cd566385dbda42cc95d6267f85c304f5
msgid ""
"Standalone mode (HTTP validation): the Standalone mode involves "
"temporarily stopping the web server to allow the ACME client tool to bind"
" to the required ports directly. It serves the authentication challenges "
"to prove domain ownership, obtaining and installing the certificate."
msgstr ""

#: ../../reverse_proxy.rst:81 9587cc322c854c68bba0bbac21422ec6
msgid ""
"DNS validation: DNS validation requires adding a specific DNS TXT record "
"to the domain's DNS configuration. ACME client checks for this record to "
"verify domain ownership. This method is useful in situations where "
"modifying web server configurations is challenging or not desired."
msgstr ""

#: ../../reverse_proxy.rst:84 952b800bc4de43d8b0d73bbabd9ca6c2
msgid ""
"When standalone mode is selected, make sure the following requirements "
"are met:"
msgstr ""

#: ../../reverse_proxy.rst:86 7d356bbd14284818ba0385f2678cfeff
msgid ""
"The firewall must be reachable from outside on port 80. The acme client "
"will:"
msgstr ""

#: ../../reverse_proxy.rst:88 50a983e7fc854f15b59458f8e3f1aefc
msgid "temporarily bind to port 80 to serve the authentication challenges"
msgstr ""

#: ../../reverse_proxy.rst:89 bda52d717008486da12a7ac5faee8310
msgid "temporarily open port 80 to the public Internet to perform the validation."
msgstr ""

#: ../../reverse_proxy.rst:91 612e0ba99ae14a31a372716c583e90db
msgid ""
"Once the validation is complete, port 80 is automatically closed. Please "
"note that if port 80 is forwarded to another server, the validation will "
"fail."
msgstr ""

#: ../../reverse_proxy.rst:94 8c7d0b0847cc4837b6796040d37b5fab
msgid ""
"The domains that you want the certificate for must be public domain names"
" associated to server own public IP. Make sure you have public DNS name "
"pointing to your server (you can check with sites like `VDNS "
"<http://viewdns.info/>`_)."
msgstr ""

#: ../../reverse_proxy.rst:98 94995e5c009c49f999fd94572b2bca4d
msgid ""
"Select DNS validation if your DNS provider supports API access. Choose "
"the DNS provider from the drop-down menu and enter the API key and "
"secret. Follow the `acme.sh DNS providers documentation "
"<https://github.com/acmesh-official/acme.sh/wiki/dnsapi>`_) to know which"
" API key and secret are required for your DNS provider. The DNS "
"validation is the only one supported for wildcard certificates."
msgstr ""

#: ../../reverse_proxy.rst:103 19f7f8ead5ca48f98a4177fa8ee02504
msgid ""
"The certificate generation process can take a few minutes. During this "
"time, the certificate status is ``Pending``."
msgstr ""

#: ../../reverse_proxy.rst:106 2b0b8b5c1a384e27abce405cbd142463
msgid "Debug Let's Encrypt"
msgstr ""

#: ../../reverse_proxy.rst:108 eac2438cc9064a84b9b8f8f1a8044138
msgid ""
"If the Let's Encrypt certificate request fails, the user can debug the "
"process by entering the following commands in the terminal: ::"
msgstr ""

#: ../../reverse_proxy.rst:113 32a71071b863466badbcee602dca4a6d
msgid ""
"The debug messages will be printed on the standard output. After the "
"problem is solved, the user can disable debug by entering the following "
"command in the terminal: ::"
msgstr ""

#: ../../reverse_proxy.rst:119 08acc25bf517451d9cb95d80290545e2
msgid "Custom certificate"
msgstr ""

#: ../../reverse_proxy.rst:121 9ee69d6148bd4d1db7b2e830932ce40c
msgid "The user can upload a custom certificate to the firewall."
msgstr ""

#: ../../reverse_proxy.rst:123 1882b0818579440ea475a20bf698e005
msgid "The process involves the following steps:"
msgstr ""

#: ../../reverse_proxy.rst:125 065ae60f6c814686bbf906703f8b35b7
msgid "click on the :guilabel:`Import certificate` button"
msgstr ""

#: ../../reverse_proxy.rst:126 216facbbfc2f44f3adb484c98e6d2d2f
msgid "specify a meaningful name for the certificate"
msgstr ""

#: ../../reverse_proxy.rst:127 a4d8411a25f34d3aa890f2ff82476c20
msgid ""
"drag and drop the certificate, private key, and optionally, the chain "
"certificate; ensure that all uploaded files adhere to the `PEM format "
"<https://en.wikipedia.org/wiki/Privacy-Enhanced_Mail>`_ standards"
msgstr ""

#: ../../reverse_proxy.rst:129 e2b3818490c64ac2ad3d4418169a524d
msgid "click on the :guilabel:`Save` button"
msgstr ""

